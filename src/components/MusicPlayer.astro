---
---

<div class="fixed bottom-4 right-4 z-50">
  <audio id="bgMusic" preload="auto">
    <source src="https://archive.org/download/frank-sinatra-the-very-best-of/The%20Very%20Best%20Of%20Frank%20Sinatra/1-01%20Stardust.mp3" type="audio/mp3">
  </audio>
  <button
    id="musicToggle"
    class="bg-white/10 backdrop-blur-md p-4 rounded-full shadow-xl hover:bg-white/20 transition-all duration-300 group"
    aria-label="Toggle Music"
  >
    <div class="relative">
      <svg id="playIcon" class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
        <path d="M8 6.82v10.36c0 .79.87 1.27 1.54.84l8.14-5.18c.62-.39.62-1.29 0-1.69L9.54 5.98C8.87 5.55 8 6.03 8 6.82z"/>
      </svg>
      <svg id="pauseIcon" class="hidden w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z"/>
      </svg>
    </div>
    <span class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 text-xs text-white bg-black/75 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap">
      <span id="musicStatus">Play Music</span>
    </span>
  </button>
</div>

<div id="confetti-container"></div>

<script>
  import confetti from 'canvas-confetti';

  let isPlaying = false;
  const audio = document.getElementById('bgMusic');
  const musicToggle = document.getElementById('musicToggle');
  const playIcon = document.getElementById('playIcon');
  const pauseIcon = document.getElementById('pauseIcon');
  const musicStatus = document.getElementById('musicStatus');

  function updateMusicUI() {
    if (playIcon && pauseIcon && musicStatus) {
      if (isPlaying) {
        playIcon.classList.add('hidden');
        pauseIcon.classList.remove('hidden');
        musicStatus.textContent = 'Pause Music';
        musicToggle?.classList.add('bg-purple-500/50');
      } else {
        playIcon.classList.remove('hidden');
        pauseIcon.classList.add('hidden');
        musicStatus.textContent = 'Play Music';
        musicToggle?.classList.remove('bg-purple-500/50');
      }
    }
  }

  if (musicToggle && audio) {
    musicToggle.addEventListener('click', () => {
      if (isPlaying) {
        audio.pause();
      } else {
        audio.play().catch(error => {
          console.error('Error playing audio:', error);
        });
      }
      isPlaying = !isPlaying;
      updateMusicUI();
    });

    // Update UI when audio naturally ends
    audio.addEventListener('ended', () => {
      isPlaying = false;
      updateMusicUI();
    });

    // Update UI when audio is paused
    audio.addEventListener('pause', () => {
      isPlaying = false;
      updateMusicUI();
    });

    // Update UI when audio starts playing
    audio.addEventListener('play', () => {
      isPlaying = true;
      updateMusicUI();
    });
  }

  // Initialize UI
  updateMusicUI();
</script>

<style>
  .group:hover .group-hover\:opacity-100 {
    opacity: 1;
  }
</style>